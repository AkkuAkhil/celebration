{"version":3,"sources":["components/GameHeader/GameBlockCheckbox.js","components/GameHeader/GameResetButtons.js","components/GameHeader/GameSelectorButtons.js","components/GameHeader/GameHeader.js","utils/utils.js","components/GameBody/NumberButton.js","components/GameBody/NumberButtonGrid.js","components/GameBody/Timer.js","components/GameBody/Image.js","components/GameBody/GameBody.js","components/GameFooter/Result.js","components/GameFooter/ScoreBoard.js","App.js","reportWebVitals.js","index.js"],"names":["GameBlockCheckbox","resetBlocks","className","type","defaultChecked","onChange","GameResetButtons","resetGame","resetBlocksDiv","onClick","GameSelectorButtons","game","changeGame","Array","fill","map","el","i","GameHeader","src","alt","URL","NumberButton","number","setImage","e","target","classList","add","remove","buttonClick","NumberButtonGrid","Timer","useState","expireAt","setExpireAt","useTimer","expiryTimestamp","Date","seconds","minutes","pause","resume","restart","Number","value","time","getSeconds","setSeconds","Image","image","blocks","style","backgroundImage","GameBody","Result","isOpen","setIsOpen","team1Score","team2Score","team1","team2","onRequestClose","ariaHideApp","closeTimeoutMS","ScoreBoard","setTeam1","setTeam2","setTeam1Score","setTeam2Score","App","setGame","setBlocks","document","querySelectorAll","forEach","resetImage","num","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.27d2e895.chunk.js","sourcesContent":["const GameBlockCheckbox = ({ resetBlocks }) => {\n  return (\n    <div className=\"game_row\">\n      <h2 className=\"game_status\">Blocks</h2>\n      <input\n        className=\"game_checkbox\"\n        type=\"checkbox\"\n        defaultChecked={true}\n        onChange={resetBlocks}\n      />\n    </div>\n  );\n};\n\nexport default GameBlockCheckbox;\n","import { FaUndoAlt } from \"react-icons/fa\";\nconst GameResetButtons = ({ resetGame, resetBlocksDiv }) => {\n  return (\n    <div className=\"game_row\">\n      <button onClick={resetGame} className=\"game_reset_button\">\n        <span className=\"game_reset_icon_container\">\n          Game\n          <FaUndoAlt className=\"game_reset_icon\" />\n        </span>\n      </button>\n      <button onClick={resetBlocksDiv} className=\"game_reset_button\">\n        <span className=\"game_reset_icon_container\">\n          Blocks\n          <FaUndoAlt className=\"game_reset_icon\" />\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default GameResetButtons;\n","const GameSelectorButtons = ({ game, changeGame }) => {\n  return (\n    <div className=\"game_row\">\n      <h2 className=\"game_status\">You are Now Playing Game {game}</h2>\n      {Array(3)\n        .fill(1)\n        .map((el, i) => (\n          <button\n            onClick={() => changeGame(i + 1)}\n            className={game === i + 1 ? \"game_button_active\" : \"game_button\"}\n          >\n            Game {i + 1}\n          </button>\n        ))}\n    </div>\n  );\n};\n\nexport default GameSelectorButtons;\n","import GameBlockCheckbox from \"./GameBlockCheckbox\";\nimport GameResetButtons from \"./GameResetButtons\";\nimport GameSelectorButtons from \"./GameSelectorButtons\";\n\nconst GameHeader = ({\n  game,\n  changeGame,\n  resetGame,\n  resetBlocks,\n  resetBlocksDiv,\n}) => {\n  return (\n    <div className=\"game_selector\">\n      <img className=\"game_logo\" src=\"/logo.png\" alt=\"logo\" />\n\n      <GameSelectorButtons game={game} changeGame={changeGame} />\n\n      <GameResetButtons resetGame={resetGame} resetBlocksDiv={resetBlocksDiv} />\n\n      <GameBlockCheckbox resetBlocks={resetBlocks} />\n    </div>\n  );\n};\n\nexport default GameHeader;\n","export const URL = \"https://akkuakhil.github.io/celebration-images/images/\";\n","import { URL } from \"../../utils/utils\";\n\nconst NumberButton = ({ game, number, setImage, resetBlocksDiv }) => {\n  const buttonClick = (e, number) => {\n    resetBlocksDiv();\n    e.target.classList.add(\"number_button_closed\");\n    e.target.classList.remove(\"number_button\");\n    setImage(`${URL}game${game}/${number}.jpeg`);\n  };\n\n  return (\n    <button className=\"number_button\" onClick={(e) => buttonClick(e, number)}>\n      {number}\n    </button>\n  );\n};\n\nexport default NumberButton;\n","import NumberButton from \"./NumberButton\";\n\nconst NumberButtonGrid = ({ game, setImage, resetBlocksDiv }) => {\n  return (\n    <div className=\"number_button_row\">\n      {Array(16)\n        .fill(1)\n        .map((el, i) => (\n          <NumberButton\n            number={i + 1}\n            key={i + 1}\n            setImage={setImage}\n            game={game}\n            resetBlocksDiv={resetBlocksDiv}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default NumberButtonGrid;\n","import React, { useState } from \"react\";\nimport { useTimer } from \"react-timer-hook\";\nimport { FaPlay, FaPause, FaStepForward } from \"react-icons/fa\";\n\nconst Timer = () => {\n  const [expireAt, setExpireAt] = useState(60);\n  const { seconds, minutes, pause, resume, restart } = useTimer({\n    expiryTimestamp: new Date(),\n  });\n\n  const reStartTimer = () => {\n    const time = new Date();\n    const seconds = time.getSeconds() + expireAt;\n    time.setSeconds(seconds);\n    restart(time);\n  };\n\n  return (\n    <div className=\"timer_container\">\n      <div className=\"timer_sub_container\">\n        <div className=\"timer_row\">\n          <input\n            onChange={(e) => setExpireAt(Number(e.target.value))}\n            value={expireAt}\n            className=\"timer_input\"\n          />\n          Sec\n        </div>\n        <div className=\"timer_number\">\n          <span>{minutes}</span>:<span>{seconds}</span>\n        </div>\n        <div className=\"timer_row\">\n          <button\n            onClick={reStartTimer}\n            className=\"timer_button timer_button_play\"\n          >\n            <FaPlay />\n          </button>\n          <button onClick={pause} className=\"timer_button timer_button_pause\">\n            <FaPause />\n          </button>\n          <button onClick={resume} className=\"timer_button timer_button_resume\">\n            <FaStepForward />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","const Image = ({ image, blocks }) => {\n  const buttonClick = (e) => {\n    e.target.classList.add(\"image_button_closed\");\n    e.target.classList.remove(\"image_button\");\n  };\n  return (\n    <div className=\"image_row\">\n      <div className=\"image\" style={{ backgroundImage: `url(${image})` }}>\n        {blocks &&\n          Array(80)\n            .fill(1)\n            .map((el, i) => (\n              <button\n                className=\"image_button\"\n                onClick={(e) => buttonClick(e)}\n                key={i + 1}\n              >\n                {i + 1}\n              </button>\n            ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Image;\n","import NumberButtonGrid from \"./NumberButtonGrid\";\nimport Timer from \"./Timer\";\nimport Image from \"./Image\";\n\nconst GameBody = ({ game, image, setImage, blocks, resetBlocksDiv }) => {\n  return (\n    <div className=\"container\">\n      <NumberButtonGrid\n        game={game}\n        setImage={setImage}\n        resetBlocksDiv={resetBlocksDiv}\n      />\n      <Timer />\n      <Image image={image} blocks={blocks} />\n    </div>\n  );\n};\n\nexport default GameBody;\n","import Modal from \"react-modal\";\n\nconst Result = ({\n  isOpen,\n  setIsOpen,\n  team1Score,\n  team2Score,\n  team1,\n  team2,\n}) => {\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={closeModal}\n      ariaHideApp={false}\n      closeTimeoutMS={200}\n      className=\"result_modal\"\n    >\n      <div>\n        <h1>Result</h1>\n        <h1 className=\"result_status\">\n          {team1Score === team2Score\n            ? \"Game is Draw\"\n            : team1Score > team2Score\n            ? `${team1} Won`\n            : `${team2} Won`}\n        </h1>\n      </div>\n    </Modal>\n  );\n};\n\nexport default Result;\n","import { useState } from \"react\";\nimport { FaGamepad } from \"react-icons/fa\";\nimport Result from \"./Result\";\n\nconst ScoreBoard = () => {\n  const [team1, setTeam1] = useState(\"Team 1\");\n  const [team2, setTeam2] = useState(\"Team 2\");\n  const [team1Score, setTeam1Score] = useState(0);\n  const [team2Score, setTeam2Score] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  return (\n    <div className=\"score_board\">\n      <h2 className=\"score_status\">ScoreBoard</h2>\n      <div className=\"score_board_row\">\n        <input\n          type=\"text\"\n          className=\"score_input\"\n          value={team1}\n          onChange={(e) => setTeam1(e.target.value)}\n        />\n        <button\n          onClick={() => setTeam1Score(team1Score + 1)}\n          className={\n            team1Score === team2Score\n              ? \"score_button\"\n              : team1Score > team2Score\n              ? \"score_button score_button_win\"\n              : \"score_button score_button_lose\"\n          }\n        >\n          {team1Score}\n        </button>\n      </div>\n      <div className=\"score_board_row\">\n        <input\n          type=\"text\"\n          className=\"score_input\"\n          value={team2}\n          onChange={(e) => setTeam2(e.target.value)}\n        />\n        <button\n          onClick={() => setTeam2Score(team2Score + 1)}\n          className={\n            team1Score === team2Score\n              ? \"score_button\"\n              : team2Score > team1Score\n              ? \"score_button score_button_win\"\n              : \"score_button score_button_lose\"\n          }\n        >\n          {team2Score}\n        </button>\n      </div>\n\n      <div className=\"score_board_row\">\n        <button onClick={openModal} className=\"score_new_button\">\n          Result\n        </button>\n        <Result\n          isOpen={isOpen}\n          setIsOpen={setIsOpen}\n          team1Score={team1Score}\n          team2Score={team2Score}\n          team1={team1}\n          team2={team2}\n        />\n        <button\n          onClick={() => {\n            setTeam1Score(0);\n            setTeam2Score(0);\n          }}\n          className=\"score_new_button\"\n        >\n          <span className=\"score_new_icon_container\">\n            New\n            <FaGamepad className=\"score_new_icon\" />\n          </span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreBoard;\n","import { useState } from \"react\";\nimport GameHeader from \"./components/GameHeader/GameHeader\";\nimport GameBody from \"./components/GameBody/GameBody\";\nimport ScoreBoard from \"./components/GameFooter/ScoreBoard\";\nimport { URL } from \"./utils/utils\";\n\nconst App = () => {\n  const [game, setGame] = useState(1);\n  const [blocks, setBlocks] = useState(true);\n  const [image, setImage] = useState(`${URL}/default.png`);\n\n  const resetBlocksDiv = () => {\n    const classes = document.querySelectorAll(\".image_button_closed\");\n    classes.forEach((el) => {\n      el.classList.remove(\"image_button_closed\");\n      el.classList.add(\"image_button\");\n    });\n  };\n\n  const resetImage = () => setImage(`${URL}/default.png`);\n  const resetBlocks = () => setBlocks(!blocks);\n\n  const resetGame = () => {\n    resetBlocksDiv();\n    resetImage();\n    const classes = document.querySelectorAll(\".number_button_closed\");\n    classes.forEach((el) => {\n      el.classList.remove(\"number_button_closed\");\n      el.classList.add(\"number_button\");\n    });\n  };\n\n  const changeGame = (num) => {\n    setGame(num);\n    resetGame();\n  };\n\n  return (\n    <div className=\"App\">\n      <GameHeader\n        game={game}\n        changeGame={changeGame}\n        setGame={setGame}\n        resetGame={resetGame}\n        resetImage={resetImage}\n        resetBlocks={resetBlocks}\n        resetBlocksDiv={resetBlocksDiv}\n      />\n      <GameBody\n        game={game}\n        image={image}\n        setImage={setImage}\n        blocks={blocks}\n        resetBlocksDiv={resetBlocksDiv}\n      />\n      <ScoreBoard />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/styles.scss\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}